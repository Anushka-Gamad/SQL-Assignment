INSERT INTO Salespeople(SNUM, SNAME, CITY, COMM)
    -> VALUES(1001, 'Peel', 'London', 12);
INSERT INTO Salespeople(SNUM, SNAME, CITY, COMM)
    -> VALUES(1002, 'Serres', 'SanJose', 13);
 INSERT INTO Salespeople(SNUM, SNAME, CITY, COMM)
    -> VALUES(1004, 'Motika', 'London', 11);
 INSERT INTO Salespeople(SNUM, SNAME, CITY, COMM)
    -> VALUES(1007, 'Rifkin', 'Barcelona', 15);
INSERT INTO Salespeople(SNUM, SNAME, CITY, COMM)
    -> VALUES(1003, 'AxelRod', 'New York', 10);
INSERT INTO Salespeople(SNUM, SNAME, CITY, COMM)
    -> VALUES(1008, 'Fran', 'London', 25);



-->SELECT * FROM Salespeople;
+------+---------+-----------+------+
| SNUM | SNAME   | CITY      | COMM |
+------+---------+-----------+------+
| 1001 | Peel    | London    |   12 |
| 1002 | Serres  | SanJose   |   13 |
| 1004 | Motika  | London    |   11 |
| 1007 | Rifkin  | Barcelona |   15 |
| 1003 | AxelRod | New York  |   10 |
| 1008 | Fran    | London    |   25 |
+------+---------+-----------+------+
6 rows in set (0.01 sec)

-->SELECT * FROM Customers;
+------+----------+---------+--------+------+
| CNUM | CNAME    | CITY    | RATING | SNUM |
+------+----------+---------+--------+------+
| 2001 | Hoffman  | London  |    100 | 1001 |
| 2002 | Giovanni | Rome    |    200 | 1003 |
| 2003 | Liu      | SanJose |    200 | 1002 |
| 2004 | Grass    | Berlin  |    300 | 1002 |
| 2006 | Clemens  | London  |    100 | 1001 |
| 2008 | Cisneros | SanJose |    300 | 1007 |
| 2007 | Pereira  | Rome    |    100 | 1004 |
+------+----------+---------+--------+------+
7 rows in set (0.00 sec)


--> SELECT * FROM Orders;
+------+---------+----------+------+------+
| ONUM | AMT     | ODATE    | CNUM | SNUM |
+------+---------+----------+------+------+
| 3001 |   18.69 | 10/03/90 | 2008 | 1007 |
| 3003 |  767.19 | 10/03/90 | 2001 | 1001 |
| 3002 |  1900.1 | 10/03/90 | 2007 | 1004 |
| 3005 | 5160.45 | 10/03/90 | 2003 | 1002 |
| 3006 | 1098.16 | 10/03/90 | 2008 | 1007 |
| 3009 | 1713.23 | 10/04/90 | 2002 | 1003 |
| 3007 |   75.75 | 10/04/90 | 2004 | 1002 |
| 3008 |    4723 | 10/05/90 | 2006 | 1001 |
| 3010 | 1309.95 | 10/06/90 | 2004 | 1002 |
| 3011 | 9891.88 | 10/06/90 | 2006 | 1001 |
+------+---------+----------+------+------+
10 rows in set (0.00 sec)


-->Query 1. List all the columns of the Salespeople table.
mysql> SELECT * FROM Salespeople;
+------+---------+-----------+------+
| SNUM | SNAME   | CITY      | COMM |
+------+---------+-----------+------+
| 1001 | Peel    | London    |   12 |
| 1002 | Serres  | SanJose   |   13 |
| 1004 | Motika  | London    |   11 |
| 1007 | Rifkin  | Barcelona |   15 |
| 1003 | AxelRod | New York  |   10 |
| 1008 | Fran    | London    |   25 |
+------+---------+-----------+------+
6 rows in set (0.01 sec)


-->Query 2.) List all customers with a rating of 100
 SELECT * from Customers WHERE RATING=100;
+------+---------+--------+--------+------+
| CNUM | CNAME   | CITY   | RATING | SNUM |
+------+---------+--------+--------+------+
| 2001 | Hoffman | London |    100 | 1001 |
| 2006 | Clemens | London |    100 | 1001 |
| 2007 | Pereira | Rome   |    100 | 1004 |
+------+---------+--------+--------+------+
3 rows in set (0.00 sec)


-->Query 3.Find the largest order taken by each salesperson on each date.
  SELECT SNUM,MAX(AMT),ODATE FROM Orders GROUP BY SNUM,ODATE;
+------+----------+----------+
| SNUM | MAX(AMT) | ODATE    |
+------+----------+----------+
| 1007 |  1098.16 | 10/03/90 |
| 1001 |   767.19 | 10/03/90 |
| 1004 |   1900.1 | 10/03/90 |
| 1002 |  5160.45 | 10/03/90 |
| 1003 |  1713.23 | 10/04/90 |
| 1002 |    75.75 | 10/04/90 |
| 1001 |     4723 | 10/05/90 |
| 1002 |  1309.95 | 10/06/90 |
| 1001 |  9891.88 | 10/06/90 |
+------+----------+----------+
9 rows in set (0.00 sec)


-->Query 4.Arrange the Order table by descending customer number.
 SELECT * FROM Orders ORDER BY CNUM DESC;
+------+---------+----------+------+------+
| ONUM | AMT     | ODATE    | CNUM | SNUM |
+------+---------+----------+------+------+
| 3001 |   18.69 | 10/03/90 | 2008 | 1007 |
| 3006 | 1098.16 | 10/03/90 | 2008 | 1007 |
| 3002 |  1900.1 | 10/03/90 | 2007 | 1004 |
| 3008 |    4723 | 10/05/90 | 2006 | 1001 |
| 3011 | 9891.88 | 10/06/90 | 2006 | 1001 |
| 3007 |   75.75 | 10/04/90 | 2004 | 1002 |
| 3010 | 1309.95 | 10/06/90 | 2004 | 1002 |
| 3005 | 5160.45 | 10/03/90 | 2003 | 1002 |
| 3009 | 1713.23 | 10/04/90 | 2002 | 1003 |
| 3003 |  767.19 | 10/03/90 | 2001 | 1001 |
+------+---------+----------+------+------+
10 rows in set (0.00 sec)


-->Query 5.) Find which salespeople currently have orders in the order table.
SELECT * FROM Salespeople WHERE SNUM IN (SELECT SNUM FROM Orders);
+------+---------+-----------+------+
| SNUM | SNAME   | CITY      | COMM |
+------+---------+-----------+------+
| 1001 | Peel    | London    |   12 |
| 1002 | Serres  | SanJose   |   13 |
| 1004 | Motika  | London    |   11 |
| 1007 | Rifkin  | Barcelona |   15 |
| 1003 | AxelRod | New York  |   10 |
+------+---------+-----------+------+
5 rows in set (0.00 sec)


-->Query 6.List names of all customers matched with the salespeople serving them
 select a.sname,b.cname from salespeople a,customers b where a.snum=b.snum;
+---------+----------+
| sname   | cname    |
+---------+----------+
| Peel    | Hoffman  |
| AxelRod | Giovanni |
| Serres  | Liu      |
| Serres  | Grass    |
| Peel    | Clemens  |
| Rifkin  | Cisneros |
| Motika  | Pereira  |
+---------+----------+
7 rows in set (0.00 sec)


-->Query 7. Find the names and numbers of all salespeople who have more than one customer
 SELECT SNUM,SNAME FROM Salespeople s
    -> WHERE 1<
    -> (SELECT COUNT(*)
    -> FROM Customers
    -> WHERE SNUM = s.SNUM);
+------+--------+
| SNUM | SNAME  |
+------+--------+
| 1001 | Peel   |
| 1002 | Serres |
+------+--------+
2 rows in set (0.01 sec)


-->Query 8.Count the orders of each of the salespeople and output the results in descending order
SELECT a.SNUM,a.ONUM,b.SNAME, COUNT(*) AS ORDER_COUNTS FROM Orders a, Salespeople b WHERE a.SNUM=b.SNUM GROUP BY SNUM;
+------+------+---------+--------------+
| SNUM | ONUM | SNAME   | ORDER_COUNTS |
+------+------+---------+--------------+
| 1007 | 3001 | Rifkin  |            2 |
| 1001 | 3003 | Peel    |            3 |
| 1004 | 3002 | Motika  |            1 |
| 1002 | 3005 | Serres  |            3 |
| 1003 | 3009 | AxelRod |            1 |
+------+------+---------+--------------+
5 rows in set (0.00 sec)

CREATE TABLE COUNTS SELECT a.SNUM,a.ONUM,b.SNAME, COUNT(*) AS ORDER_COUNTS FROM Orders a, Salespeople b WHERE a.SNUM=b.SNUM GROUP BY SNUM;
Query OK, 5 rows affected (0.06 sec)
Records: 5  Duplicates: 0  Warnings: 0

SELECT * FROM COUNTS ORDER BY ORDER_COUNTS DESC;
+------+------+---------+--------------+
| SNUM | ONUM | SNAME   | ORDER_COUNTS |
+------+------+---------+--------------+
| 1001 | 3003 | Peel    |            4 |
| 1007 | 3001 | Rifkin  |            2 |
| 1002 | 3007 | Serres  |            2 |
| 1004 | 3005 | Motika  |            1 |
| 1003 | 3009 | AxelRod |            1 |
+------+------+---------+--------------+
5 rows in set (0.01 sec)


-->Query 9. List the customer table if and only if one or more of the customers in the Customer table are located in SanJose.

mysql> SELECT * FROM Customers WHERE EXISTS
    -> (SELECT * FROM Customers WHERE CITY='SanJose');
+------+----------+---------+--------+------+
| CNUM | CNAME    | CITY    | RATING | SNUM |
+------+----------+---------+--------+------+
| 2001 | Hoffman  | London  |    100 | 1001 |
| 2002 | Giovanni | Rome    |    200 | 1003 |
| 2003 | Liu      | SanJose |    200 | 1002 |
| 2004 | Grass    | Berlin  |    300 | 1002 |
| 2006 | Clemens  | London  |    100 | 1001 |
| 2008 | Cisneros | SanJose |    300 | 1007 |
| 2007 | Pereira  | Rome    |    100 | 1004 |
+------+----------+---------+--------+------+
7 rows in set (0.00 sec)


-->Query 10. Match salespeople to customers according to what city they live in.
mysql> SELECT a.SNUM,a.SNAME,b.CNAME,b.CNUM FROM Salespeople a,Customers b WHERE a.CITY=b.CITY;
+------+--------+----------+------+
| SNUM | SNAME  | CNAME    | CNUM |
+------+--------+----------+------+
| 1008 | Fran   | Hoffman  | 2001 |
| 1004 | Motika | Hoffman  | 2001 |
| 1001 | Peel   | Hoffman  | 2001 |
| 1002 | Serres | Liu      | 2003 |
| 1008 | Fran   | Clemens  | 2006 |
| 1004 | Motika | Clemens  | 2006 |
| 1001 | Peel   | Clemens  | 2006 |
| 1002 | Serres | Cisneros | 2008 |
+------+--------+----------+------+
8 rows in set (0.00 sec)

-->Query 11.Find all the customers in SanJose who have a rating above 200.
SELECT * FROM Customers WHERE CITY='SanJose' AND RATING>200;
+------+----------+---------+--------+------+
| CNUM | CNAME    | CITY    | RATING | SNUM |
+------+----------+---------+--------+------+
| 2008 | Cisneros | SanJose |    300 | 1007 |
+------+----------+---------+--------+------+
1 row in set (0.01 sec)


-->Query 12.List the names and commissions of all salespeople in London.
mysql> SELECT SNAME,COMM FROM Salespeople WHERE CITY='London';
+--------+------+
| SNAME  | COMM |
+--------+------+
| Peel   |   12 |
| Motika |   11 |
| Fran   |   25 |
+--------+------+
3 rows in set (0.00 sec)


-->Query 13.List all the orders of Salesperson Motika from the orders table
SELECT a.SNAME,b.ONUM,b.AMT,b.ODATE FROM Salespeople a, Orders b,Customers c WHERE a.SNUM=c.SNUM and c.CNUM= b.CNUM and SNAME='Motika';
+--------+------+--------+----------+
| SNAME  | ONUM | AMT    | ODATE    |
+--------+------+--------+----------+
| Motika | 3002 | 1900.1 | 10/03/90 |
+--------+------+--------+----------+
1 row in set (0.00 sec)


-->Query 14. Find all customers who booked orders on October 3.
 SELECT c.CNUM,c.CNAME,o.ODATE FROM Customers c,Orders o WHERE c.SNUM=o.SNUM AND c.CNUM=o.CNUM AND o.ODATE='10/03/90';
+------+----------+----------+
| CNUM | CNAME    | ODATE    |
+------+----------+----------+
| 2001 | Hoffman  | 10/03/90 |
| 2003 | Liu      | 10/03/90 |
| 2008 | Cisneros | 10/03/90 |
| 2008 | Cisneros | 10/03/90 |
| 2007 | Pereira  | 10/03/90 |
+------+----------+----------+
5 rows in set (0.00 sec)


-->Query 15.Give the sums of the amounts from the Orders table, grouped by date, eliminating all those dates where the SUM was not at least 2000 above
the maximum Amount.
mysql> SELECT ODATE, SUM(AMT)
    -> FROM Orders o
    -> GROUP BY ODATE
    -> HAVING SUM(AMT)>
    -> (SELECT 2000.00+ MAX(AMT)
    -> FROM Orders a
    -> WHERE o.ODATE=a.ODATE);
+----------+-------------------+
| ODATE    | SUM(AMT)          |
+----------+-------------------+
| 10/03/90 | 8944.590208053589 |
+----------+-------------------+
1 row in set (0.01 sec)


-->Query 16. Select all orders that had amounts that were greater than at least one of the orders from October 6.
mysql> SELECT * FROM Orders WHERE AMT> ANY
    -> (SELECT AMT
    -> FROM Orders
    -> WHERE ODATE='10/06/90');
+------+---------+----------+------+------+
| ONUM | AMT     | ODATE    | CNUM | SNUM |
+------+---------+----------+------+------+
| 3002 |  1900.1 | 10/03/90 | 2007 | 1004 |
| 3005 | 5160.45 | 10/03/90 | 2003 | 1002 |
| 3009 | 1713.23 | 10/04/90 | 2002 | 1003 |
| 3008 |    4723 | 10/05/90 | 2006 | 1001 |
| 3011 | 9891.88 | 10/06/90 | 2006 | 1001 |
+------+---------+----------+------+------+
5 rows in set (0.01 sec)

-->QUERY 17. Write a query that uses the EXISTS operator to extract all salespeople who have customers with a rating of 300.
mysql> SELECT * FROM Salespeople s WHERE EXISTS(SELECT * FROM CUSTOMERS c WHERE c.SNUM=s.SNUM AND c.RATING=300);
+------+--------+-----------+------+
| SNUM | SNAME  | CITY      | COMM |
+------+--------+-----------+------+
| 1002 | Serres | SanJose   |   13 |
| 1007 | Rifkin | Barcelona |   15 |
+------+--------+-----------+------+
2 rows in set (0.01 sec)

-->Query 18.Find all customers whose cnum is 1000 above the snum of Serres.
 SELECT CNUM,CNAME FROM Customers WHERE CNUM>(SELECT SNUM FROM Salespeople WHERE SNAME='Serres');
+------+----------+
| CNUM | CNAME    |
+------+----------+
| 2001 | Hoffman  |
| 2002 | Giovanni |
| 2003 | Liu      |
| 2004 | Grass    |
| 2006 | Clemens  |
| 2008 | Cisneros |
| 2007 | Pereira  |
+------+----------+
7 rows in set (0.00 sec)

-->Query 19.Give the salespeople’s commissions as percentages instead of decimal numbers.
mysql> SELECT COMM/100 FROM SALESPEOPLE;
+----------+
| COMM/100 |
+----------+
|   0.1200 |
|   0.1300 |
|   0.1100 |
|   0.1500 |
|   0.1000 |
|   0.2500 |
+----------+
6 rows in set (0.00 sec)


-->Query 20.Find the largest order taken by each salesperson on each date, eliminating those Maximum orders, which are less than 3000.

